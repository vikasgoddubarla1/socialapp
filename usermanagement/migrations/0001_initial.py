# Generated by Django 5.0.7 on 2024-08-02 18:34

import django.core.validators
import django.db.models.deletion
import usermanagement.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone_code', models.CharField(max_length=10)),
                ('longitude', models.CharField(max_length=100)),
                ('latitude', models.CharField(max_length=100)),
                ('zone_name', models.CharField(max_length=100)),
                ('gmtoffsetname', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('firstname', models.CharField(max_length=55)),
                ('lastname', models.CharField(max_length=55)),
                ('username', models.CharField(max_length=55, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='users/profile_photo', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), usermanagement.models.validate_file_size])),
                ('bio', models.TextField(blank=True, max_length=2000, null=True)),
                ('is_private_account', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('country_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usermanagement.country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecoveryCode',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='usermanagement.user')),
                ('codes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FollowUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_status', models.CharField(choices=[('approved', 'approved'), ('pending', 'pending')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_follower', to='usermanagement.user')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_follow', to='usermanagement.user')),
            ],
        ),
        migrations.CreateModel(
            name='BlockUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('block_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_user', to='usermanagement.user')),
                ('blocked_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by_user', to='usermanagement.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserForgotPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('expired_at', models.DateTimeField()),
                ('is_expired', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usermanagement.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserLoginLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('browser', models.CharField(blank=True, max_length=300, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=300, null=True)),
                ('device', models.CharField(blank=True, max_length=300, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=300, null=True)),
                ('last_login', models.DateTimeField(blank=True, max_length=300, null=True)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usermanagement.user')),
            ],
            options={
                'verbose_name_plural': 'User login logs',
            },
        ),
    ]
